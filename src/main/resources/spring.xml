<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/data/mongo     
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd  
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">


	<context:component-scan base-package="team.xiaoya.dt.**">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 配置xmemchached开始 见下载的包：xmemcached-1.4.2下的说明文档 -->
	<bean name="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
		<!-- XMemcachedClientBuilder have two arguments.First is server list,and 
			second is weights array. -->
		<constructor-arg>
			<list>
				<bean class="java.net.InetSocketAddress">
					<constructor-arg >
						<value>${memcacheIP}</value>
					</constructor-arg>
					<constructor-arg >
						<value>${memcachePort}</value>
					</constructor-arg>
				</bean>
			</list>
		</constructor-arg>
		<constructor-arg>
			<list>
				<value>1</value>
				<!-- <value>2</value> -->
			</list>
		</constructor-arg>


		<property name="connectionPoolSize" value="2"></property>
		<property name="commandFactory">
			<bean class="net.rubyeye.xmemcached.command.TextCommandFactory"></bean>
		</property>
		<property name="sessionLocator">
			<bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"></bean>
		</property>
		<property name="transcoder">
			<bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />
		</property>
	</bean>

	<!-- Use factory bean to build memcached client -->
	<bean id="memcachedClient" name="memcachedClient" factory-bean="memcachedClientBuilder"
		factory-method="build" destroy-method="shutdown" />

	<!-- 配置xmemchached结束 -->

	<!-- spring线程调度 -->
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="50" />
	</bean>



	<!-- MySQL 数据源配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">

		<property name="driverClass">
			<value>${jdbcDriverClass}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbcUrl}</value>
		</property>
		<property name="user">
			<value>${jdbcName}</value>
		</property>

		<property name="password">
			<value>${jdbcPassword}</value>
		</property>

		<property name="acquireIncrement">
			<value>${jdbcAcquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${jdbcInitialPoolSize}</value>
		</property>

		<property name="minPoolSize">
			<value>${jdbcMinPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${jdbcMaxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${jdbcMaxIdleTime}</value>
		</property>
		<property name="maxStatements">
			<value>${jdbcMaxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${jdbcNumHelperThreads}</value>
		</property>
 		<property name="testConnectionOnCheckout">
 			<value>${jdbcTestConnectionOnCheckout}</value>
 		</property>
 		<property name="preferredTestQuery">
 			<value>${jdbcPreferredTestQuery}</value>
 		</property>
 		
 		
 		<!-- http://www.blogjava.net/Alpha/archive/2009/03/29/262789.html 这里要使用root用户让c3p0自动新建c3p0TestTable表 -->
 		<property name="acquireRetryAttempts">
			<value>${jdbcAcquireRetryAttempts}</value>
		</property>
		<property name="acquireRetryDelay">
			<value>${jdbcAcquireRetryDelay}</value>
		</property>
		<property name="testConnectionOnCheckin">
			<value>${jdbcTestConnectionOnCheckin}</value>
		</property>
		<property name="automaticTestTable">
			<value>${jdbcAutomaticTestTable}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${jdbcIdleConnectionTestPeriod}</value>
		</property>
		<property name="checkoutTimeout">
			<value>${jdbcCheckoutTimeout}</value>
		</property>
	   
	</bean>
	

	<!-- Session 工厂配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"></ref>
		</property>
		<property name="hibernateProperties"> 
			<props> 
 			    <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
 				<prop key="hibernate.hbm2ddl.auto">none</prop>
 		    	<prop key="hibernate.show_sql">true</prop> 
				<prop key="hibernate.jdbc.fetch_size">100</prop>
 				<prop key="hibernate.jdbc.batch_size">50</prop>

 				
 				<!-- http://blog.csdn.net/bluesnail216/article/details/15810119 -->
				<prop key="connection.autoReconnect">true</prop> 
		        <prop key="connection.autoReconnectForPools">true</prop> 
		        <prop key="connection.is-connection-validation-required">true</prop> 
		        
 				
 				<prop key="connection.useUnicode">true</prop>
 				<prop key="connection.characterEncoding">UTF-8</prop>
			</props> 
		</property>
		<!-- ORM [注解] 配置实体包 -->
		<property name="packagesToScan">
			<list>
				<value>team.xiaoya.dt.entity</value>
			</list>
		</property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>

	</bean>
	<aop:aspectj-autoproxy />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" read-only="false" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" />
			<tx:method name="modify*" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" />
			<!-- hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />


		</tx:attributes>
	</tx:advice>

	<!-- 见http://www.oschina.net/question/659202_86641 -->
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* team.xiaoya.dt.service..*.*(..))" />
	</aop:config>
	
	<!-- 根据web.xml里指定激活开发:dev  线上环境：online -->
	<beans profile="dev">
		<context:property-placeholder location="classpath:/constants.properties" ignore-unresolvable="true"  />
	</beans>
</beans>